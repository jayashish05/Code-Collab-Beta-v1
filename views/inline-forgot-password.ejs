<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password | CodeCollab</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
  <script type="module" src="https://unpkg.com/@splinetool/viewer@1.10.24/build/spline-viewer.js"></script>

  <!-- Inline all CSS to ensure styling works in Vercel -->
  <style>
    :root {
      /* iOS-inspired color palette */
      --ios-primary: #007aff;
      --ios-primary-dark: #0056b3;
      --ios-primary-light: #47a3ff;
      --ios-secondary: #5ac8fa;
      --ios-success: #4cd964;
      --ios-warning: #ff9500;
      --ios-danger: #ff3b30;
      --ios-gray-1: #8e8e93;
      --ios-gray-2: #aeaeb2;
      --ios-gray-3: #c7c7cc;
      --ios-gray-4: #d1d1d6;
      --ios-gray-5: #e5e5ea;
      --ios-gray-6: #f2f2f7;
      --ios-text: #000000;
      --ios-text-secondary: #3c3c43;
      --ios-background: rgba(255, 255, 255, 0.85);
      --ios-card-bg: rgba(255, 255, 255, 0.85);
      --ios-shadow: rgba(0, 0, 0, 0.15);
      --ios-backdrop-blur: 10px;
      --ios-border-radius: 12px;
      --ios-transition: 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
      --ios-dark-background: rgba(28, 28, 30, 0.85);
      --ios-dark-card-bg: rgba(44, 44, 46, 0.9);
      --ios-dark-text: #ffffff;
      --ios-dark-text-secondary: rgba(255, 255, 255, 0.8);
      --ios-dark-shadow: rgba(0, 0, 0, 0.35);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: -apple-system, BlinkMacSystemFont, "San Francisco", "Helvetica Neue", Helvetica, Arial, sans-serif;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    body {
      color: var(--ios-text);
      min-height: 100vh;
      width: 100%;
      position: relative;
      overflow-x: hidden;
      background-color: #0f172a;
    }

    /* Spline container styles */
    .spline-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      overflow: hidden;
      opacity: 1;
      filter: brightness(1) contrast(1.1) saturate(1.2);
      transition: opacity 0.5s ease;
    }

    /* Lightweight alternative background for better performance */
    .gradient-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -2;
      background: linear-gradient(125deg, #0a2463, #3e92cc, #2a628f, #3e92cc);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      opacity: 0.3;
      transition: opacity 0.5s ease, z-index 0.1s;
      pointer-events: none;
    }

    .gradient-bg::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.3);
      z-index: -1;
    }

    body.performance-mode .spline-container {
      display: none;
    }

    body.performance-mode .gradient-bg {
      opacity: 0.8;
      z-index: -1;
    }

    .mode-notification {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 10px 20px;
      border-radius: 50px;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      z-index: 1000;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      animation: fadeInOut 2s forwards;
      opacity: 0;
      pointer-events: none;
    }

    @keyframes fadeInOut {
      0% { opacity: 0; transform: translate(-50%, 20px); }
      20% { opacity: 1; transform: translate(-50%, 0); }
      80% { opacity: 1; transform: translate(-50%, 0); }
      100% { opacity: 0; transform: translate(-50%, -20px); }
    }

    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    /* Container Styles */
    .ios-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 2rem;
      position: relative;
      z-index: 1;
    }

    /* Card Styles */
    .ios-card {
      background: var(--ios-card-bg);
      backdrop-filter: blur(var(--ios-backdrop-blur));
      -webkit-backdrop-filter: blur(var(--ios-backdrop-blur));
      border-radius: var(--ios-border-radius);
      padding: 2rem;
      width: 100%;
      max-width: 420px;
      box-shadow: 0 4px 24px var(--ios-shadow);
      transition: var(--ios-transition);
      position: relative;
      overflow: hidden;
    }

    .close-btn {
      position: absolute;
      top: 20px;
      right: 20px;
      width: 30px;
      height: 30px;
      border-radius: 15px;
      background-color: rgba(0, 0, 0, 0.05);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--ios-text-secondary);
      font-size: 1.2rem;
      cursor: pointer;
      transition: var(--ios-transition);
      border: none;
    }

    .close-btn:hover {
      background-color: rgba(0, 0, 0, 0.1);
    }

    .ios-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
    }

    /* Form Styles */
    .ios-brand {
      text-align: center;
      margin-bottom: 2rem;
    }

    .ios-brand h1 {
      font-size: 1.8rem;
    }

    .ios-brand p {
      color: var(--ios-text-secondary);
      font-size: 0.95rem;
      margin-top: 0.5rem;
      max-width: 300px;
      margin-left: auto;
      margin-right: auto;
      line-height: 1.4;
    }

    .ios-form-group {
      margin-bottom: 1.5rem;
      position: relative;
    }

    .ios-form-group label {
      display: block;
      font-size: 0.9rem;
      color: var(--ios-text-secondary);
      margin-bottom: 0.5rem;
      font-weight: 500;
      transition: none;
      transform-origin: left;
    }

    .ios-form-control {
      width: 100%;
      padding: 0.75rem 1rem;
      font-size: 1rem;
      border-radius: 10px;
      border: 1px solid var(--ios-gray-4);
      background-color: rgba(255, 255, 255, 0.8);
      color: var(--ios-text);
      transition: var(--ios-transition);
      -webkit-appearance: none;
      appearance: none;
    }

    .ios-form-group:focus-within label {
      color: var(--ios-primary);
    }

    .ios-form-control.error {
      border-color: var(--ios-danger);
    }

    .ios-error-message {
      color: var(--ios-danger);
      font-size: 0.85rem;
      margin-top: 0.5rem;
    }

    .ios-success-message {
      color: var(--ios-success);
      font-size: 0.85rem;
      margin-top: 0.5rem;
      display: flex;
      align-items: center;
    }

    .ios-help-text {
      color: var(--ios-text-secondary);
      font-size: 0.85rem;
      margin-top: 0.5rem;
      opacity: 0.7;
    }

    .ios-form-control:focus {
      outline: none;
      border-color: #4facfe;
      box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.2);
    }

    .ios-btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      font-weight: 500;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      transition: var(--ios-transition);
      text-decoration: none;
    }

    .ios-btn-primary {
      background-color: var(--ios-primary);
      color: white;
    }

    .ios-btn-primary:hover {
      background-color: var(--ios-primary-dark);
      transform: translateY(-2px);
    }

    .ios-btn-primary:active {
      background-color: var(--ios-primary-dark);
      transform: translateY(1px);
    }

    .ios-btn-block {
      display: block;
      width: 100%;
    }

    /* Toggle Buttons */
    .ios-theme-toggle, .ios-performance-toggle {
      position: fixed;
      z-index: 10;
      top: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .ios-theme-toggle {
      right: 20px;
    }

    .ios-performance-toggle {
      right: 70px;
    }

    .ios-theme-toggle button, .ios-performance-toggle button {
      background: rgba(255, 255, 255, 0.1);
      border: none;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      cursor: pointer;
      backdrop-filter: blur(5px);
      -webkit-backdrop-filter: blur(5px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .ios-theme-toggle button:hover, .ios-performance-toggle button:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
    }

    .ios-performance-toggle button.active {
      background: rgba(90, 200, 250, 0.2);
      box-shadow: 0 0 0 2px rgba(90, 200, 250, 0.3);
      color: var(--ios-secondary);
    }

    /* Dark Mode Styles */
    body.dark-mode {
      background-color: #000;
      color: var(--ios-dark-text);
    }

    .dark-mode .ios-card {
      background: var(--ios-dark-card-bg);
      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.3),
                  0 0 0 1px rgba(255, 255, 255, 0.1);
      color: var(--ios-dark-text);
    }

    .dark-mode .ios-brand p {
      color: var(--ios-dark-text-secondary);
    }

    .dark-mode .ios-form-group label {
      color: var(--ios-dark-text-secondary);
    }

    .dark-mode .ios-form-control {
      background-color: rgba(44, 44, 46, 0.8);
      border-color: rgba(255, 255, 255, 0.1);
      color: white;
    }

    .dark-mode .ios-form-control:focus {
      border-color: var(--ios-primary-light);
    }

    .dark-mode .ios-help-text {
      color: var(--ios-dark-text-secondary);
    }

    /* Media Queries */
    @media (max-width: 768px) {
      .ios-card {
        padding: 1.5rem;
      }

      .ios-btn {
        padding: 0.7rem 1.2rem;
      }
    }

    @media (max-width: 480px) {
      .ios-container {
        padding: 1rem;
      }

      .ios-card {
        padding: 1.25rem;
      }

      .ios-theme-toggle, .ios-performance-toggle {
        top: 10px;
      }

      .ios-theme-toggle {
        right: 10px;
      }

      .ios-performance-toggle {
        right: 60px;
      }
    }
  </style>
</head>
<body>
  <!-- Spline Background -->
  <div class="spline-container">
    <spline-viewer url="https://prod.spline.design/HAPDwhAWHdkj3Od2/scene.splinecode"></spline-viewer>
  </div>

  <!-- Lightweight gradient background (alternative) -->
  <div class="gradient-bg"></div>

  <!-- Theme Toggle Button -->
  <div class="ios-theme-toggle">
    <button id="themeToggle" title="Toggle Dark/Light Mode">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="12" cy="12" r="5"></circle>
        <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"></path>
      </svg>
    </button>
  </div>

  <!-- Performance Mode Toggle Button -->
  <div class="ios-performance-toggle">
    <button id="performanceToggle" title="Toggle Performance Mode">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"></path>
      </svg>
    </button>
  </div>

  <div class="ios-container">
    <div class="ios-card">
    <div style="display: flex; justify-content: space-between; margin-bottom: 2rem;">
      <h2 style="font-size: 1.5rem; font-weight: 500;">Reset password</h2>
    </div>

    <form action="/auth/forgot-password" method="POST">
      <% if (locals.error) { %>
        <div class="ios-error-message" role="alert">
          <%= error %>
        </div>
      <% } %>

      <% if (locals.success) { %>
        <div class="ios-success-message" role="alert">
          <%= success %>
        </div>
      <% } %>

      <div class="ios-form-group">
        <label for="email">Email address</label>
        <input
          type="email"
          class="ios-form-control <%= locals.errors && errors.email ? 'error' : '' %>"
          id="email"
          name="email"
          placeholder="Enter your email address"
          value="<%= locals.formData ? formData.email : '' %>"
          autocomplete="email"
          required
        >
        <% if (locals.errors && errors.email) { %>
          <div class="ios-error-message"><%= errors.email %></div>
        <% } %>
      </div>

      <p class="ios-help-text">
        We'll send you a secure link to reset your password. The link will expire after 30 minutes.
      </p>

      <button type="submit" class="ios-btn ios-btn-primary ios-btn-block">
        Reset password
      </button>
    </form>

    <div style="text-align: center; margin-top: 2rem;">
      <a href="/auth/signin" style="color: #3b82f6; text-decoration: none; font-size: 0.9rem;">Return to sign in</a>
    </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      // Theme toggle functionality
      const themeToggle = document.getElementById('themeToggle');
      let darkMode = false; // Start with light mode for iOS feel

      // Check for saved theme preference
      if (localStorage.getItem('darkMode') === 'true') {
        darkMode = true;
        document.body.classList.add('dark-mode');
      }

      themeToggle.addEventListener('click', () => {
        darkMode = !darkMode;
        document.body.classList.toggle('dark-mode', darkMode);
        localStorage.setItem('darkMode', darkMode);
      });

      // Performance mode toggle
      const performanceToggle = document.getElementById('performanceToggle');
      let performanceMode = localStorage.getItem('performanceMode') === 'true';

      // Apply performance mode if it was previously enabled
      if (performanceMode) {
        document.body.classList.add('performance-mode');
        performanceToggle.classList.add('active');
      } else {
        document.body.classList.remove('performance-mode');
        performanceToggle.classList.remove('active');
      }

      performanceToggle.addEventListener('click', () => {
        performanceMode = !performanceMode;
        document.body.classList.toggle('performance-mode', performanceMode);
        performanceToggle.classList.toggle('active', performanceMode);
        localStorage.setItem('performanceMode', performanceMode.toString());

        // Add notification
        const notification = document.createElement('div');
        notification.className = 'mode-notification';
        notification.textContent = performanceMode ? 'Performance Mode Enabled' : 'Full Graphics Mode Enabled';
        document.body.appendChild(notification);

        // Remove notification after animation
        setTimeout(() => {
          notification.remove();
        }, 2000);
      });
    });
  </script>
</body>
</html>
