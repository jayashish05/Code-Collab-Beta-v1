<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home | CodeCollab</title>
  <script type="module" src="https://unpkg.com/@splinetool/viewer@1.10.24/build/spline-viewer.js"></script>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">

  <!-- All CSS inlined to avoid Vercel loading issues -->
  <style>
    :root {
      --ios-primary: #007aff;
      --ios-primary-dark: #0056b3;
      --ios-primary-light: #47a3ff;
      --ios-secondary: #5ac8fa;
      --ios-success: #4cd964;
      --ios-warning: #ff9500;
      --ios-danger: #ff3b30;
      --ios-gray-1: #8e8e93;
      --ios-gray-2: #aeaeb2;
      --ios-gray-3: #c7c7cc;
      --ios-gray-4: #d1d1d6;
      --ios-gray-5: #e5e5ea;
      --ios-gray-6: #f2f2f7;
      --ios-text: #000000;
      --ios-text-secondary: #3c3c43;
      --ios-background: rgba(255, 255, 255, 0.85);
      --ios-card-bg: rgba(255, 255, 255, 0.85);
      --ios-shadow: rgba(0, 0, 0, 0.15);
      --ios-backdrop-blur: 10px;
      --ios-border-radius: 12px;
      --ios-transition: 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
      --ios-dark-background: rgba(28, 28, 30, 0.85);
      --ios-dark-card-bg: rgba(44, 44, 46, 0.9);
      --ios-dark-text: #ffffff;
      --ios-dark-text-secondary: rgba(255, 255, 255, 0.8);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: -apple-system, BlinkMacSystemFont, "San Francisco", "Helvetica Neue", Helvetica, Arial, sans-serif;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    body {
      color: var(--ios-text);
      min-height: 100vh;
      width: 100%;
      position: relative;
      overflow-x: hidden;
      background-color: #0f172a;
    }

    .spline-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      overflow: hidden;
      opacity: 1;
      filter: brightness(1) contrast(1.1) saturate(1.2);
      transition: opacity 0.5s ease;
    }

    .gradient-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -2;
      background: linear-gradient(125deg, #0a2463, #3e92cc, #2a628f, #3e92cc);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      opacity: 0.3;
      transition: opacity 0.5s ease, z-index 0.1s;
      pointer-events: none;
    }

    .gradient-bg::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.3);
      z-index: -1;
    }

    body.performance-mode .spline-container {
      display: none;
    }

    body.performance-mode .gradient-bg {
      opacity: 0.8;
      z-index: -1;
    }

    .mode-notification {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 10px 20px;
      border-radius: 50px;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      z-index: 1000;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      animation: fadeInOut 2s forwards;
      opacity: 0;
      pointer-events: none;
    }

    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    @keyframes fadeInOut {
      0% { opacity: 0; transform: translate(-50%, 20px); }
      20% { opacity: 1; transform: translate(-50%, 0); }
      80% { opacity: 1; transform: translate(-50%, 0); }
      100% { opacity: 0; transform: translate(-50%, -20px); }
    }

    .ios-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 2rem;
      position: relative;
      z-index: 1;
      max-width: 1200px;
      margin: 0 auto;
    }

    .ios-hero {
      text-align: center;
      margin-bottom: 3rem;
    }

    .ios-hero h1 {
      color: white;
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(to right, #5ac8fa, #007aff);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-fill-color: transparent;
      letter-spacing: -0.5px;
    }

    .ios-hero p {
      color: rgba(255, 255, 255, 0.8);
      font-size: 1.25rem;
      max-width: 700px;
      margin: 0 auto;
      line-height: 1.6;
    }

    .ios-feature-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 2rem;
      margin: 3rem 0;
      width: 100%;
    }

    .ios-feature {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border-radius: 16px;
      padding: 1.5rem;
      transition: all 0.3s ease;
      text-align: center;
      border: 1px solid rgba(255, 255, 255, 0.05);
    }

    .ios-feature:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      background: rgba(255, 255, 255, 0.15);
    }

    .ios-feature-icon {
      font-size: 2.5rem;
      margin-bottom: 1rem;
      display: inline-block;
      position: relative;
    }

    .ios-feature-icon::after {
      content: "";
      position: absolute;
      width: 40px;
      height: 40px;
      background: rgba(90, 200, 250, 0.1);
      border-radius: 50%;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%) scale(1.2);
      z-index: -1;
    }

    .ios-feature h3 {
      color: white;
      font-size: 1.25rem;
      margin-bottom: 0.75rem;
      font-weight: 600;
    }

    .ios-feature p {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.95rem;
      line-height: 1.6;
    }

    .ios-buttons {
      display: flex;
      gap: 1rem;
      margin-top: 2rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    .ios-btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      font-weight: 500;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
    }

    .ios-btn-primary {
      background-color: var(--ios-primary);
      color: white;
    }

    .ios-btn-primary:hover {
      background-color: var(--ios-primary-dark);
      transform: translateY(-2px);
    }

    .ios-btn-secondary {
      background: rgba(255, 255, 255, 0.1);
      color: white;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .ios-btn-secondary:hover {
      background: rgba(255, 255, 255, 0.2);
      border-color: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
    }

    .ios-cta {
      text-align: center;
      margin-top: 3rem;
    }

    .ios-cta h2 {
      color: white;
      font-size: 2rem;
      margin-bottom: 1rem;
    }

    .ios-cta p {
      color: rgba(255, 255, 255, 0.8);
      font-size: 1.1rem;
      margin-bottom: 1.5rem;
    }

    .ios-theme-toggle, .ios-performance-toggle {
      position: fixed;
      z-index: 10;
      top: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .ios-theme-toggle {
      right: 20px;
    }

    .ios-performance-toggle {
      right: 70px;
    }

    .ios-theme-toggle button, .ios-performance-toggle button {
      background: rgba(255, 255, 255, 0.1);
      border: none;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      cursor: pointer;
      backdrop-filter: blur(5px);
      -webkit-backdrop-filter: blur(5px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .ios-theme-toggle button:hover, .ios-performance-toggle button:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    }

    .ios-performance-toggle button.active {
      background: rgba(90, 200, 250, 0.2);
      box-shadow: 0 0 0 2px rgba(90, 200, 250, 0.3);
      color: var(--ios-secondary);
    }

    /* Dark Mode Styles */
    body.dark-mode {
      background-color: #000;
      color: var(--ios-dark-text);
    }

    @media (max-width: 768px) {
      .ios-hero h1 {
        font-size: 2.5rem;
      }

      .ios-hero p {
        font-size: 1rem;
      }

      .ios-buttons {
        flex-direction: column;
        width: 100%;
        max-width: 300px;
        margin: 2rem auto 0;
      }
    }

    @media (max-width: 480px) {
      .ios-container {
        padding: 1rem;
      }

      .ios-hero h1 {
        font-size: 2rem;
      }

      .ios-feature-grid {
        grid-template-columns: 1fr;
      }

      .ios-theme-toggle {
        top: 10px;
        right: 10px;
      }

      .ios-performance-toggle {
        top: 10px;
        right: 60px;
      }
    }
  </style>
</head>
<body>
  <!-- Spline Background -->
  <div class="spline-container">
    <spline-viewer url="https://prod.spline.design/HAPDwhAWHdkj3Od2/scene.splinecode"></spline-viewer>
  </div>

  <!-- Theme Toggle Button -->
  <div class="ios-theme-toggle">
    <button id="themeToggle" title="Toggle Dark/Light Mode">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="12" cy="12" r="5"></circle>
        <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"></path>
      </svg>
    </button>
  </div>

  <!-- Performance Mode Toggle Button -->
  <div class="ios-performance-toggle">
    <button id="performanceToggle" title="Toggle Performance Mode">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"></path>
      </svg>
    </button>
  </div>

  <!-- Main Content -->
  <div class="ios-container">
    <div class="ios-hero">
      <h1>CodeCollab</h1>
      <p>A real-time collaborative coding platform for developers who want to build together, no matter where they are in the world.</p>

      <div class="ios-buttons">
        <a href="/auth/signup" class="ios-btn ios-btn-primary">Get Started</a>
        <a href="/features" class="ios-btn ios-btn-secondary">Learn More</a>
      </div>
    </div>

    <div class="ios-feature-grid">
      <div class="ios-feature">
        <div class="ios-feature-icon">💻</div>
        <h3>Real-time Collaboration</h3>
        <p>Code with your team in real-time, seeing changes as they happen with our lightning-fast sync technology.</p>
      </div>

      <div class="ios-feature">
        <div class="ios-feature-icon">🔒</div>
        <h3>Secure Codebase</h3>
        <p>Your code is always protected with enterprise-grade security and permissions management.</p>
      </div>

      <div class="ios-feature">
        <div class="ios-feature-icon">🚀</div>
        <h3>Instant Deployment</h3>
        <p>Deploy your projects with a single click to various cloud platforms with our integrated CI/CD pipelines.</p>
      </div>

      <div class="ios-feature">
        <div class="ios-feature-icon">✨</div>
        <h3>AI Code Assistance</h3>
        <p>Get intelligent code suggestions and bug fixes powered by our advanced AI assistant.</p>
      </div>

      <div class="ios-feature">
        <div class="ios-feature-icon">📱</div>
        <h3>Mobile Compatible</h3>
        <p>Review, edit, and collaborate on your projects from any device with our responsive interface.</p>
      </div>

      <div class="ios-feature">
        <div class="ios-feature-icon">🔍</div>
        <h3>Smart Code Search</h3>
        <p>Find anything in your codebase quickly with our semantic search capabilities.</p>
      </div>
    </div>

    <div class="ios-cta">
      <h2>Ready to start coding together?</h2>
      <p>Join thousands of developers already using CodeCollab</p>
      <div style="margin-top: 1.5rem;">
        <a href="/auth/signup" class="ios-btn ios-btn-primary">Create Free Account</a>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      // Theme toggle functionality
      const themeToggle = document.getElementById('themeToggle');
      let darkMode = false; // Start with light mode for iOS feel

      // Check for saved theme preference
      if (localStorage.getItem('darkMode') === 'true') {
        darkMode = true;
        document.body.classList.add('dark-mode');
      }

      themeToggle.addEventListener('click', () => {
        darkMode = !darkMode;
        document.body.classList.toggle('dark-mode', darkMode);
        localStorage.setItem('darkMode', darkMode);
      });

      // Performance mode toggle
      const performanceToggle = document.getElementById('performanceToggle');
      let performanceMode = localStorage.getItem('performanceMode') === 'true';

      // Apply performance mode if it was previously enabled
      if (performanceMode) {
        document.body.classList.add('performance-mode');
        performanceToggle.classList.add('active');
      } else {
        document.body.classList.remove('performance-mode');
        performanceToggle.classList.remove('active');
      }

      performanceToggle.addEventListener('click', () => {
        performanceMode = !performanceMode;
        document.body.classList.toggle('performance-mode', performanceMode);
        performanceToggle.classList.toggle('active', performanceMode);
        localStorage.setItem('performanceMode', performanceMode.toString());

        // Add notification
        const notification = document.createElement('div');
        notification.className = 'mode-notification';
        notification.textContent = performanceMode ? 'Performance Mode Enabled' : 'Full Graphics Mode Enabled';
        document.body.appendChild(notification);

        // Remove notification after animation
        setTimeout(() => {
          notification.remove();
        }, 2000);
      });
    });
  </script>
</body>
</html>
